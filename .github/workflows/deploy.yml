name: Build Dashboard

on:
  workflow_dispatch:
  schedule:
    - cron: "0 * * * *"  # Runs every hour; you can adjust the schedule

permissions:
  contents: write

jobs:
  check-api-update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup git for commit
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
      
      - name: Checkout and reset meta-data branch
        run: |
          git fetch --all
          git checkout meta-data || git checkout -b meta-data origin/meta-data  # Create the meta-data branch if it doesn't exist
          
      - name: Fetch API data
        id: api_check
        run: |
          response=$(curl -s https://fantasy.premierleague.com/api/leagues-h2h-matches/league/2696403/?page=1)
          echo "$response" > current_api_data.json

      - name: Compare API response
        id: compare_update
        run: |
          # Compare the current API response with the previous response
          if [[ -f previous_api_data.json ]]; then
            if ! diff previous_api_data.json current_api_data.json; then
              echo "API data updated"
              echo "api_updated=true" >> $GITHUB_OUTPUT  # Set output to indicate an update
            else
              echo "API data has not changed."
              echo "api_updated=false" >> $GITHUB_OUTPUT  # No update
            fi
          else
            echo "First run or previous data missing. Treating as update."
            echo "api_updated=true" >> $GITHUB_OUTPUT
          fi
          echo "Storing current API data for future comparisons."
          mv current_api_data.json previous_api_data.json
          git add previous_api_data.json
          git commit -m "Update previous_api_data.json" || echo "No changes to commit"
          git push origin meta-data --force  # Push the changes to the meta-data branch

    outputs:
      api_updated: ${{ steps.compare_update.outputs.api_updated }}

  build:
    runs-on: ubuntu-latest
    needs: check-api-update  # Ensures this job runs after `check-api-update` job

    # This ensures the build job only runs if the API data has changed or if the workflow is manually triggered
    if: ${{ needs.check-api-update.outputs.api_updated == 'true' }}

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
      with:
          token: ${{ secrets.GH_PAT }}

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        sudo apt-get update
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Install Chrome
      uses: browser-actions/setup-chrome@v1
    
    - name: Checkout and reset html-update branch
      run: |
        git fetch --all
        git checkout html-update || git checkout -b html-update origin/html-update  # Create the html-update branch if it doesn't exist
        git reset --hard origin/main  # Reset the html-update branch to match the main branch
    
    - name: Generate static HTML
      run: |
        python generate_html.py

    - name: Generate static HTML and commit changes
      run: |
        git config user.name "github-actions"
        git config user.email "github-actions@github.com"
        git add . 
        git commit -m "Update static HTML" || echo "No changes to commit"  # Commit changes if any

    - name: Push to html-update branch
      run: |
        git push origin html-update --force
